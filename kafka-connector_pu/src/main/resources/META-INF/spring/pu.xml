<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:os-events="http://www.openspaces.org/schema/events"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.openspaces.org/schema/core http://www.openspaces.org/schema/core/openspaces-core.xsd
       http://www.openspaces.org/schema/events http://www.openspaces.org/schema/events/openspaces-events.xsd">
    <!-- Enable Spring component scanning for the specified path -->
    <context:component-scan base-package="com.gigaspaces.connector" />

    <!-- Enable GigaSpaces annotation support -->
    <os-core:annotation-support/>
    <os-events:annotation-support />

    <!-- Spring property configurer which allows us to use system properties (such as user.name). -->
    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties">
            <props>
                <prop key="space.name">demo</prop>
                <prop key="spring.kafka.bootstrap-servers"></prop>
                <prop key="spring.kafka.consumer-group">DIH</prop>
            </props>
        </property>
    </bean>

    <bean id="ConsumerConfig" class="com.gigaspaces.connector.kafka.ConsumerConfig">
        <property name="bootstrapServers" value="${spring.kafka.bootstrap-servers}" />
        <property name="consumerGroup" value="${spring.kafka.consumer-group}" />
    </bean>
    <!-- Defines a space proxy-->
    <os-core:space-proxy id="space" space-name="${space.name}"/>

    <!-- Defines a gigaSpace for the space proxy-->
    <os-core:giga-space id="gigaSpace" space="space" tx-manager="transactionManager" />

    <!-- Defines a transaction manager -->
    <os-core:distributed-tx-manager id="transactionManager" />
</beans>