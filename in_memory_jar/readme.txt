This Utility is basically for deploy space in both way with space properties + tiered storage with space properties.
Here basic steps with help of ODSX how to utilize this utility.
############################################
For Space with bi_optional_pu-0.1.jar deploy
############################################
1. Customize spaceproperty.properties file if you needed or you can provide it externally and put your required property key and value to set
2. Build project with respected GS version its tested up to GS 16.2.0
3. Copy /target/bi_optional_pu-0.1.jar file to ODSX (pivot) server.
4. Run ODSX navigate to Menu -> Space -> Create space with jar
5. Make sure it must list space hosts on table
6. Provide option if you want to create GSC and followed by number of GSC you have option to create GSC on specific host or cluster.
7. Follow the required arguments parameter : Memory requried, zone for GSC,
8. Enter file path including jar file Specify uploaded bi_optional_pu-0.1.jar full path : It will upload you jar to space hosts also redirect message.
9. Enter name of PU which would like to show on UI
10.Enter partitions required and followed by zone of PU which is simillar to GSC created.
12.Provided SLA HA if you want to required backup of partitions you have mentioned.
13.It will ask if you want to add spce property or just need to deploy space jar
14 If you want to provide space property then provide full path of space.property file which is in ODSX (Pivot) machine
15.Specify target path which has read permission from remote space servers
16.This jar will be uploaded to all space hosts by ODSX
17.Specify space name which would like to show on space.
18.After final confirmation on console you can see Jar status Running , failed, success ODSX will check response code on frequent interval untill found success.
19.Once successfully upload of jar you can browse space from OPs manager or Web UI ad verify params / space property in logs
#service deploy --partitions 1 --max-instances-per-vm 1 --schema partitioned --backups 0 space --property=pu.autogenerated-instance-sla=true --property=tieredCriteriaConfig.filePath=/home/tapan/tmp/temp/TieredCriteria.tab /home/tapan/Gigaspace/gigaspaces-smart-ods-enterprise-16.0.0/bin/bllspace/target/in_memory_jar-0.1.jar
#####################################################
For Tiered-Storage with bi_optional_pu-0.1.jar deploy
#####################################################
1. Customize spaceproperty.properties / TieredCriteria.tab file if you needed or you can provide it externally and put your required property key and value to set
2. Build project with respected GS version its tested up to GS 16.2.0
3. Copy /target/bi_optional_pu-0.1.jar file to ODSX (pivot) server.
4. Run ODSX navigate to Menu -> Tiered Storage -> Deploy
5. Make sure it must list space hosts on table
6. Provide option if you want to create GSC and followed by number of GSC you have option to create GSC on specific host or cluster.
7. Follow the required arguments parameter : Memory requried, zone for GSC,
8. Enter file path including jar file Specify uploaded bi_optional_pu-0.1.jar full path : It will upload you jar to space hosts also redirect message.
9. Enter name of PU which would like to show on UI
10.Enter partitions required and followed by zone of PU which is simillar to GSC created.
12.Provided SLA HA if you want to required backup of partitions you have mentioned.
13.Enter tieredCriteriaConfig.filePath source file path including file name of your Tiered Storage criteria file : [/home/ec2-user/TieredCriteria.tab]
   - Enter Target tieredCriteriaConfig.filePath.target : target path which has read permission from remote space servers
14 If you want to provide space property then provide full path of space.property file which is in ODSX (Pivot) machine
15.Specify target path which has read permission from remote space servers
16.This jar will be uploaded to all space hosts by ODSX
17.Specify space name which would like to show on space.
18.After final confirmation on console you can see Jar status Running , failed, success ODSX will check response code on frequent interval untill found success.
19.Once successfully upload of jar you can browse space from OPs manager or Web UI ad verify params / space property in logs, see the symbol of space it must deployed as TieredStorage.

